var search_data = {"index":{"searchIndex":["ability","accessoriescontroller","accessorisation","accessory","address","addresscontroller","admin","accessoriescontroller","admincontroller","categoriescontroller","countries","taxratescontroller","zonescontroller","countriescontroller","orderscontroller","products","attachmentscontroller","skus","attributetypescontroller","stocklevelscontroller","skuscontroller","tagscontroller","productscontroller","shippings","tierscontroller","shippingscontroller","transactionscontroller","applicationcontroller","applicationhelper","attachment","attributetype","cart","cartitem","cartitemaccessory","cartitemscontroller","categoriescontroller","category","categoryhelper","country","countrytax","deepstruct","destination","errorscontroller","fileuploader","mailatron4000","orders","stock","notification","notificationscontroller","notifier","order","orderhelper","orderitem","orderitemaccessory","orders","buildcontroller","orderscontroller","payatron4000","paypal","product","producthelper","productscontroller","redactorrails","asset","document","picture","redactorrailsdocumentuploader","redactorrailspictureuploader","relatedproduct","role","search","searchcontroller","shipping","shippingscontroller","sku","skuscontroller","stocklevel","store","storecontroller","storesetting","tag","tagging","taxrate","tier","tiervalidator","tiered","transaction","user","users","registrationscontroller","sessionscontroller","userscontroller","zone","zonification","about()","accessory_details()","activate!()","activate!()","activate!()","activate!()","active()","active()","active()","active()","active?()","active_category?()","active_controller?()","active_or_billing?()","active_or_payment?()","active_or_shipping?()","active_page?()","add()","add_cart_item()","add_cart_items_from_cart()","add_foreign_field()","admin_permissions()","after_sign_out_path_for()","app_breadcrumb_add()","as_json_methods()","assign_paypal_token()","autocomplete()","available()","boolean_helper()","breadcrumb_add()","calculate_order()","calculate_shipping_tier()","category_list()","check_permissions()","check_stock_values()","coloured_row()","contact()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create_admin_breadcrumbs()","create_app_breadcrumbs()","current_cart()","dashboard()","decrement_cart_item_quantity()","del()","delayed_shipping()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","dispatch_all()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","errors_for()","express()","express_items()","express_purchase_options()","express_setup_options()","extension_white_list()","extension_white_list()","extension_white_list()","failed()","failure()","format_currency()","full_name()","gross_price()","guest_permissions()","inactivate!()","inactivate!()","inactivate!()","inactivate!()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","javascript()","link_to_add_fields()","link_to_remove_fields()","low_stock()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","notification_sent()","notify()","order_received()","order_shipped()","order_updated()","payment_status()","paypal_ipn()","pending_order()","positive?()","price_in_pennies()","price_range()","purchase()","purge()","render_breadcrumbs()","reset_settings()","reset_tax()","reset_tax()","reset_tax_rate()","results()","role?()","search_data()","settings()","settings()","ship_order_today()","shipping_date_nil?()","shipping_delayed()","shipping_status()","should_validate_sku?()","show()","show()","show()","show()","show()","single_product()","sku_attribute_values()","sku_stock_notification()","status_code()","stock_update()","store_dir()","store_dir()","store_dir()","success()","successful()","table_commands()","tax_rate()","to_h()","total_price()","total_price()","total_price()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update_quantity()","update_weight()","url_content()","url_content()","user_permissions()","validate_each()","warning()","readme_for_app"],"longSearchIndex":["ability","accessoriescontroller","accessorisation","accessory","address","addresscontroller","admin","admin::accessoriescontroller","admin::admincontroller","admin::categoriescontroller","admin::countries","admin::countries::taxratescontroller","admin::countries::zonescontroller","admin::countriescontroller","admin::orderscontroller","admin::products","admin::products::attachmentscontroller","admin::products::skus","admin::products::skus::attributetypescontroller","admin::products::skus::stocklevelscontroller","admin::products::skuscontroller","admin::products::tagscontroller","admin::productscontroller","admin::shippings","admin::shippings::tierscontroller","admin::shippingscontroller","admin::transactionscontroller","applicationcontroller","applicationhelper","attachment","attributetype","cart","cartitem","cartitemaccessory","cartitemscontroller","categoriescontroller","category","categoryhelper","country","countrytax","deepstruct","destination","errorscontroller","fileuploader","mailatron4000","mailatron4000::orders","mailatron4000::stock","notification","notificationscontroller","notifier","order","orderhelper","orderitem","orderitemaccessory","orders","orders::buildcontroller","orderscontroller","payatron4000","payatron4000::paypal","product","producthelper","productscontroller","redactorrails","redactorrails::asset","redactorrails::document","redactorrails::picture","redactorrailsdocumentuploader","redactorrailspictureuploader","relatedproduct","role","search","searchcontroller","shipping","shippingscontroller","sku","skuscontroller","stocklevel","store","storecontroller","storesetting","tag","tagging","taxrate","tier","tiervalidator","tiered","transaction","user","users","users::registrationscontroller","users::sessionscontroller","userscontroller","zone","zonification","storecontroller#about()","producthelper#accessory_details()","accessory#activate!()","product#activate!()","shipping#activate!()","sku#activate!()","accessory::active()","product::active()","shipping::active()","sku::active()","order#active?()","applicationhelper#active_category?()","applicationhelper#active_controller?()","order#active_or_billing?()","order#active_or_payment?()","order#active_or_shipping?()","applicationhelper#active_page?()","tag::add()","cart#add_cart_item()","order#add_cart_items_from_cart()","applicationhelper#add_foreign_field()","ability#admin_permissions()","applicationcontroller#after_sign_out_path_for()","applicationhelper#app_breadcrumb_add()","redactorrails::document#as_json_methods()","payatron4000::paypal::assign_paypal_token()","searchcontroller#autocomplete()","country::available()","applicationhelper#boolean_helper()","applicationhelper#breadcrumb_add()","order#calculate_order()","order#calculate_shipping_tier()","applicationcontroller#category_list()","users::registrationscontroller#check_permissions()","sku#check_stock_values()","producthelper#coloured_row()","storecontroller#contact()","admin::accessoriescontroller#create()","admin::categoriescontroller#create()","admin::countries::taxratescontroller#create()","admin::countries::zonescontroller#create()","admin::countriescontroller#create()","admin::products::skus::attributetypescontroller#create()","admin::products::skus::stocklevelscontroller#create()","admin::productscontroller#create()","admin::shippings::tierscontroller#create()","admin::shippingscontroller#create()","cartitemscontroller#create()","notificationscontroller#create()","applicationhelper#create_admin_breadcrumbs()","applicationhelper#create_app_breadcrumbs()","applicationcontroller#current_cart()","admin::admincontroller#dashboard()","cart#decrement_cart_item_quantity()","tag::del()","order#delayed_shipping()","admin::accessoriescontroller#destroy()","admin::categoriescontroller#destroy()","admin::countries::taxratescontroller#destroy()","admin::countries::zonescontroller#destroy()","admin::countriescontroller#destroy()","admin::products::attachmentscontroller#destroy()","admin::products::skus::attributetypescontroller#destroy()","admin::products::skuscontroller#destroy()","admin::products::tagscontroller#destroy()","admin::productscontroller#destroy()","admin::shippings::tierscontroller#destroy()","admin::shippingscontroller#destroy()","cartitemscontroller#destroy()","userscontroller#destroy()","mailatron4000::orders::dispatch_all()","admin::accessoriescontroller#edit()","admin::categoriescontroller#edit()","admin::countries::taxratescontroller#edit()","admin::countries::zonescontroller#edit()","admin::countriescontroller#edit()","admin::products::skus::attributetypescontroller#edit()","admin::products::skuscontroller#edit()","admin::productscontroller#edit()","admin::shippings::tierscontroller#edit()","admin::shippingscontroller#edit()","userscontroller#edit()","applicationhelper#errors_for()","orders::buildcontroller#express()","payatron4000::paypal::express_items()","payatron4000::paypal::express_purchase_options()","payatron4000::paypal::express_setup_options()","fileuploader#extension_white_list()","redactorrailsdocumentuploader#extension_white_list()","redactorrailspictureuploader#extension_white_list()","payatron4000::paypal::failed()","orders::buildcontroller#failure()","applicationhelper#format_currency()","address#full_name()","producthelper#gross_price()","ability#guest_permissions()","accessory#inactivate!()","product#inactivate!()","shipping#inactivate!()","sku#inactivate!()","admin::accessoriescontroller#index()","admin::categoriescontroller#index()","admin::countries::taxratescontroller#index()","admin::countries::zonescontroller#index()","admin::countriescontroller#index()","admin::orderscontroller#index()","admin::products::skus::attributetypescontroller#index()","admin::products::tagscontroller#index()","admin::productscontroller#index()","admin::shippings::tierscontroller#index()","admin::shippingscontroller#index()","storecontroller#index()","applicationhelper#javascript()","applicationhelper#link_to_add_fields()","applicationhelper#link_to_remove_fields()","notifier#low_stock()","ability::new()","admin::accessoriescontroller#new()","admin::categoriescontroller#new()","admin::countries::taxratescontroller#new()","admin::countries::zonescontroller#new()","admin::countriescontroller#new()","admin::products::skus::attributetypescontroller#new()","admin::products::skus::stocklevelscontroller#new()","admin::productscontroller#new()","admin::shippings::tierscontroller#new()","admin::shippingscontroller#new()","deepstruct::new()","orderscontroller#new()","userscontroller#new()","mailatron4000::notification_sent()","mailatron4000::stock::notify()","notifier#order_received()","notifier#order_shipped()","notifier#order_updated()","orderhelper#payment_status()","admin::transactionscontroller#paypal_ipn()","notifier#pending_order()","store::positive?()","payatron4000::price_in_pennies()","categoryhelper#price_range()","orders::buildcontroller#purchase()","orders::buildcontroller#purge()","applicationhelper#render_breadcrumbs()","store::reset_settings()","country#reset_tax()","taxrate#reset_tax()","store::reset_tax_rate()","searchcontroller#results()","user#role?()","product#search_data()","admin::admincontroller#settings()","store::settings()","order#ship_order_today()","order#shipping_date_nil?()","notifier#shipping_delayed()","orderhelper#shipping_status()","sku#should_validate_sku?()","admin::orderscontroller#show()","categoriescontroller#show()","errorscontroller#show()","orders::buildcontroller#show()","productscontroller#show()","product#single_product()","producthelper#sku_attribute_values()","notifier#sku_stock_notification()","errorscontroller#status_code()","payatron4000::stock_update()","fileuploader#store_dir()","redactorrailsdocumentuploader#store_dir()","redactorrailspictureuploader#store_dir()","orders::buildcontroller#success()","payatron4000::paypal::successful()","applicationhelper#table_commands()","store::tax_rate()","deepstruct#to_h()","cart#total_price()","cartitem#total_price()","orderitem#total_price()","accessoriescontroller#update()","admin::accessoriescontroller#update()","admin::admincontroller#update()","admin::categoriescontroller#update()","admin::countries::taxratescontroller#update()","admin::countries::zonescontroller#update()","admin::countriescontroller#update()","admin::orderscontroller#update()","admin::products::skus::attributetypescontroller#update()","admin::products::skuscontroller#update()","admin::productscontroller#update()","admin::shippings::tierscontroller#update()","admin::shippingscontroller#update()","cartitemscontroller#update()","orders::buildcontroller#update()","shippingscontroller#update()","skuscontroller#update()","userscontroller#update()","cartitem#update_quantity()","cartitem#update_weight()","redactorrails::document#url_content()","redactorrails::picture#url_content()","ability#user_permissions()","tiervalidator#validate_each()","mailatron4000::stock::warning()",""],"info":[["Ability","","Ability.html","","<p>Ability documentation\n<p>The ability class defines the user types and permission within your\napplication. …\n"],["AccessoriesController","","AccessoriesController.html","",""],["Accessorisation","","Accessorisation.html","","<p>Schema Information\n<p>Table name: accessorisations\n\n<pre>id               :integer          not null, primary key ...</pre>\n"],["Accessory","","Accessory.html","","<p>Schema Information\n<p>Table name: accessories\n\n<pre>id               :integer          not null, primary key\nname ...</pre>\n"],["Address","","Address.html","","<p>Schema Information\n<p>Table name: addresses\n\n<pre>id                       :integer          not null, primary key ...</pre>\n"],["AddressController","","AddressController.html","",""],["Admin","","Admin.html","",""],["Admin::AccessoriesController","","Admin/AccessoriesController.html","",""],["Admin::AdminController","","Admin/AdminController.html","",""],["Admin::CategoriesController","","Admin/CategoriesController.html","",""],["Admin::Countries","","Admin/Countries.html","",""],["Admin::Countries::TaxRatesController","","Admin/Countries/TaxRatesController.html","",""],["Admin::Countries::ZonesController","","Admin/Countries/ZonesController.html","",""],["Admin::CountriesController","","Admin/CountriesController.html","",""],["Admin::OrdersController","","Admin/OrdersController.html","",""],["Admin::Products","","Admin/Products.html","",""],["Admin::Products::AttachmentsController","","Admin/Products/AttachmentsController.html","",""],["Admin::Products::Skus","","Admin/Products/Skus.html","",""],["Admin::Products::Skus::AttributeTypesController","","Admin/Products/Skus/AttributeTypesController.html","",""],["Admin::Products::Skus::StockLevelsController","","Admin/Products/Skus/StockLevelsController.html","",""],["Admin::Products::SkusController","","Admin/Products/SkusController.html","",""],["Admin::Products::TagsController","","Admin/Products/TagsController.html","",""],["Admin::ProductsController","","Admin/ProductsController.html","",""],["Admin::Shippings","","Admin/Shippings.html","",""],["Admin::Shippings::TiersController","","Admin/Shippings/TiersController.html","",""],["Admin::ShippingsController","","Admin/ShippingsController.html","",""],["Admin::TransactionsController","","Admin/TransactionsController.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["Attachment","","Attachment.html","","<p>Schema Information\n<p>Table name: attachments\n\n<pre>id                 :integer          not null, primary key\nattachable_id ...</pre>\n"],["AttributeType","","AttributeType.html","","<p>Schema Information\n<p>Table name: attribute_types\n\n<pre>id             :integer          not null, primary key\nname ...</pre>\n"],["Cart","","Cart.html","","<p>Schema Information\n<p>Table name: carts\n\n<pre>id             :integer          not null, primary key\ncreated_at ...</pre>\n"],["CartItem","","CartItem.html","","<p>Schema Information\n<p>Table name: cart_items\n\n<pre>id             :integer          not null, primary key\ncart_id ...</pre>\n"],["CartItemAccessory","","CartItemAccessory.html","","<p>Schema Information\n<p>Table name: cart_item_accessories\n\n<pre>id                   :integer          not null, primary ...</pre>\n"],["CartItemsController","","CartItemsController.html","",""],["CategoriesController","","CategoriesController.html","",""],["Category","","Category.html","","<p>Schema Information\n<p>Table name: categories\n\n<pre>id             :integer          not null, primary key\nname  ...</pre>\n"],["CategoryHelper","","CategoryHelper.html","",""],["Country","","Country.html","","<p>Schema Information\n<p>Table name: countries\n\n<pre>id                   :integer          not null, primary key\nname ...</pre>\n"],["CountryTax","","CountryTax.html","","<p>Schema Information\n<p>Table name: country_taxes\n\n<pre>id                   :integer          not null, primary key ...</pre>\n"],["DeepStruct","","DeepStruct.html","","<p>DeepStruct documentation\n<p>Inherits from OpenStruct to convert a hash to an object, including nested\nvalues …\n"],["Destination","","Destination.html","","<p>Schema Information\n<p>Table name: destinations\n\n<pre>id             :integer          not null, primary key\nzone_id ...</pre>\n"],["ErrorsController","","ErrorsController.html","",""],["FileUploader","","FileUploader.html","",""],["Mailatron4000","","Mailatron4000.html","",""],["Mailatron4000::Orders","","Mailatron4000/Orders.html","",""],["Mailatron4000::Stock","","Mailatron4000/Stock.html","",""],["Notification","","Notification.html","","<p>Schema Information\n<p>Table name: notifications\n\n<pre>id                   :integer          not null, primary key ...</pre>\n"],["NotificationsController","","NotificationsController.html","",""],["Notifier","","Notifier.html","",""],["Order","","Order.html","","<p>Schema Information\n<p>Table name: orders\n\n<pre>id                       :integer          not null, primary key ...</pre>\n"],["OrderHelper","","OrderHelper.html","",""],["OrderItem","","OrderItem.html","","<p>Schema Information\n<p>Table name: order_items\n\n<pre>id             :integer          not null, primary key\norder_id ...</pre>\n"],["OrderItemAccessory","","OrderItemAccessory.html","","<p>Schema Information\n<p>Table name: cart_item_accessories\n\n<pre>id                   :integer          not null, primary ...</pre>\n"],["Orders","","Orders.html","",""],["Orders::BuildController","","Orders/BuildController.html","",""],["OrdersController","","OrdersController.html","",""],["Payatron4000","","Payatron4000.html","",""],["Payatron4000::Paypal","","Payatron4000/Paypal.html","",""],["Product","","Product.html","","<p>Schema Information\n<p>Table name: products\n\n<pre>id                       :integer          not null, primary key ...</pre>\n"],["ProductHelper","","ProductHelper.html","",""],["ProductsController","","ProductsController.html","",""],["RedactorRails","","RedactorRails.html","",""],["RedactorRails::Asset","","RedactorRails/Asset.html","",""],["RedactorRails::Document","","RedactorRails/Document.html","",""],["RedactorRails::Picture","","RedactorRails/Picture.html","",""],["RedactorRailsDocumentUploader","","RedactorRailsDocumentUploader.html","",""],["RedactorRailsPictureUploader","","RedactorRailsPictureUploader.html","",""],["RelatedProduct","","RelatedProduct.html","","<p>Schema Information\n<p>Table name: related_products\n\n<pre>id             :integer          not null, primary key ...</pre>\n"],["Role","","Role.html","",""],["Search","","Search.html","",""],["SearchController","","SearchController.html","",""],["Shipping","","Shipping.html","","<p>Schema Information\n<p>Table name: shippings\n\n<pre>id             :integer          not null, primary key\nname   ...</pre>\n"],["ShippingsController","","ShippingsController.html","",""],["Sku","","Sku.html","","<p>Schema Information\n<p>Table name: skus\n\n<pre>id                         :integer          not null, primary key ...</pre>\n"],["SkusController","","SkusController.html","",""],["StockLevel","","StockLevel.html","","<p>Schema Information\n<p>Table name: stock_levels\n\n<pre>id                   :integer            not null, primary ...</pre>\n"],["Store","","Store.html","",""],["StoreController","","StoreController.html","",""],["StoreSetting","","StoreSetting.html","","<p>Schema Information\n<p>Table name: store_settings\n\n<pre>id               :integer                not null, primary ...</pre>\n"],["Tag","","Tag.html","","<p>Schema Information\n<p>Table name: tags\n\n<pre>id             :integer          not null, primary key\nname        ...</pre>\n"],["Tagging","","Tagging.html","","<p>Schema Information\n<p>Table name: taggings\n\n<pre>id             :integer          not null, primary key\nproduct_id ...</pre>\n"],["TaxRate","","TaxRate.html","","<p>Schema Information\n<p>Table name: tax_rates\n\n<pre>id                       :integer          not null, primary key ...</pre>\n"],["Tier","","Tier.html","","<p>Schema Information\n<p>Table name: tiers\n\n<pre>id                  :integer          not null, primary key\nlength_start ...</pre>\n"],["TierValidator","","TierValidator.html","",""],["Tiered","","Tiered.html","","<p>Schema Information\n<p>Table name: tiereds\n\n<pre>id             :integer          not null, primary key\ntier_id  ...</pre>\n"],["Transaction","","Transaction.html","","<p>Schema Information\n<p>Table name: transactions\n\n<pre>id                           :integer          not null, primary ...</pre>\n"],["User","","User.html","","<p>Schema Information\n<p>Table name: users\n\n<pre>id                           :integer            not null, primary ...</pre>\n"],["Users","","Users.html","",""],["Users::RegistrationsController","","Users/RegistrationsController.html","",""],["Users::SessionsController","","Users/SessionsController.html","",""],["UsersController","","UsersController.html","",""],["Zone","","Zone.html","","<p>Schema Information\n<p>Table name: zones\n\n<pre>id             :integer          not null, primary key\nname       ...</pre>\n"],["Zonification","","Zonification.html","","<p>Schema Information\n<p>Table name: zonifications\n\n<pre>id             :integer          not null, primary key\ncountry_id ...</pre>\n"],["about","StoreController","StoreController.html#method-i-about","()",""],["accessory_details","ProductHelper","ProductHelper.html#method-i-accessory_details","(accessory)",""],["activate!","Accessory","Accessory.html#method-i-activate-21","()","<p>Sets the related record&#39;s active field as true\n<p>@return [object]\n"],["activate!","Product","Product.html#method-i-activate-21","()","<p>Sets the related record&#39;s active field as true\n<p>@return [object]\n"],["activate!","Shipping","Shipping.html#method-i-activate-21","()","<p>Sets the related record&#39;s active field as true\n<p>@return [object]\n"],["activate!","Sku","Sku.html#method-i-activate-21","()","<p>Sets the related record&#39;s active field as true\n<p>@return [object]\n"],["active","Accessory","Accessory.html#method-c-active","()","<p>Grabs an array of records which have their active field set to true\n<p>@return [array]\n"],["active","Product","Product.html#method-c-active","()","<p>Grabs an array of records which have their active field set to true\n<p>@return [array]\n"],["active","Shipping","Shipping.html#method-c-active","()","<p>Grabs an array of records which have their active field set to true\n<p>@return [array]\n"],["active","Sku","Sku.html#method-c-active","()","<p>Grabs an array of records which have their active field set to true\n<p>@return [array]\n"],["active?","Order","Order.html#method-i-active-3F","()","<p>Detects if the current status of the order is &#39;active&#39;. Inactive\norders are deleted on a daily …\n"],["active_category?","ApplicationHelper","ApplicationHelper.html#method-i-active_category-3F","(id)",""],["active_controller?","ApplicationHelper","ApplicationHelper.html#method-i-active_controller-3F","(controller)",""],["active_or_billing?","Order","Order.html#method-i-active_or_billing-3F","()","<p>Detects if the current status of the order is &#39;billing&#39;. See wicked\ngem for more info\n<p>@return …\n"],["active_or_payment?","Order","Order.html#method-i-active_or_payment-3F","()","<p>Detects if the current status of the order is &#39;payment&#39;. See wicked\ngem for more info\n<p>@return …\n"],["active_or_shipping?","Order","Order.html#method-i-active_or_shipping-3F","()","<p>Detects if the current status of the order is &#39;shipping&#39;. See\nwicked gem for more info\n<p>@return …\n"],["active_page?","ApplicationHelper","ApplicationHelper.html#method-i-active_page-3F","(controller, action)",""],["add","Tag","Tag.html#method-c-add","(value, product_id)","<p>Creates or updates the list of tags for an object\n<p>@return [array]\n"],["add_cart_item","Cart","Cart.html#method-i-add_cart_item","(sku, item_quantity, accessory)","<p>Adds a new cart item or increases the quantity and weight of a cart item -\nincluding any assocated accessories …\n"],["add_cart_items_from_cart","Order","Order.html#method-i-add_cart_items_from_cart","(cart)","<p>Upon completing an order, transfer the cart item data to new order item\nrecords\n<p>@return [nil]\n"],["add_foreign_field","ApplicationHelper","ApplicationHelper.html#method-i-add_foreign_field","(f, association)",""],["admin_permissions","Ability","Ability.html#method-i-admin_permissions","(user)",""],["after_sign_out_path_for","ApplicationController","ApplicationController.html#method-i-after_sign_out_path_for","(resource_or_scope)",""],["app_breadcrumb_add","ApplicationHelper","ApplicationHelper.html#method-i-app_breadcrumb_add","(title, url)",""],["as_json_methods","RedactorRails::Document","RedactorRails/Document.html#method-i-as_json_methods","()",""],["assign_paypal_token","Payatron4000::Paypal","Payatron4000/Paypal.html#method-c-assign_paypal_token","(token, payer_id, session, order)","<p>assign paypal token to order after user logs into their account\n"],["autocomplete","SearchController","SearchController.html#method-i-autocomplete","()",""],["available","Country","Country.html#method-c-available","()","<p>Grabs an array of records which have their available field set to true\n<p>@return [array]\n"],["boolean_helper","ApplicationHelper","ApplicationHelper.html#method-i-boolean_helper","(obj, first, second)",""],["breadcrumb_add","ApplicationHelper","ApplicationHelper.html#method-i-breadcrumb_add","(title, url)",""],["calculate_order","Order","Order.html#method-i-calculate_order","(cart, session, current_tax_rate)","<p>Set the session variables for an order - sub total, tax and total\n<p>@return [session] FIXME: Looks really …\n"],["calculate_shipping_tier","Order","Order.html#method-i-calculate_shipping_tier","(cart)","<p>Calculate the relevant shipping tier for an order, taking into account\nlength, thickness and weight of …\n"],["category_list","ApplicationController","ApplicationController.html#method-i-category_list","()",""],["check_permissions","Users::RegistrationsController","Users/RegistrationsController.html#method-i-check_permissions","()",""],["check_stock_values","Sku","Sku.html#method-i-check_stock_values","()","<p>Validation check to ensure the stock value is higher than the stock warning\nlevel value when creating …\n"],["coloured_row","ProductHelper","ProductHelper.html#method-i-coloured_row","(adjustment)",""],["contact","StoreController","StoreController.html#method-i-contact","()",""],["create","Admin::AccessoriesController","Admin/AccessoriesController.html#method-i-create","()","<p>POST /accessories POST /accessories.json\n"],["create","Admin::CategoriesController","Admin/CategoriesController.html#method-i-create","()","<p>POST /categories POST /categories.json\n"],["create","Admin::Countries::TaxRatesController","Admin/Countries/TaxRatesController.html#method-i-create","()","<p>POST /tax_rates POST /tax_rates.json\n"],["create","Admin::Countries::ZonesController","Admin/Countries/ZonesController.html#method-i-create","()","<p>POST /zones POST /zones.json\n"],["create","Admin::CountriesController","Admin/CountriesController.html#method-i-create","()","<p>POST /countries POST /countries.json\n"],["create","Admin::Products::Skus::AttributeTypesController","Admin/Products/Skus/AttributeTypesController.html#method-i-create","()","<p>POST /attribute_types POST /attribute_types.json\n"],["create","Admin::Products::Skus::StockLevelsController","Admin/Products/Skus/StockLevelsController.html#method-i-create","()",""],["create","Admin::ProductsController","Admin/ProductsController.html#method-i-create","()","<p>POST /products POST /products.json\n"],["create","Admin::Shippings::TiersController","Admin/Shippings/TiersController.html#method-i-create","()","<p>POST /tiers POST /tiers.json\n"],["create","Admin::ShippingsController","Admin/ShippingsController.html#method-i-create","()","<p>POST /shippings POST /shippings.json\n"],["create","CartItemsController","CartItemsController.html#method-i-create","()","<p>POST /cart_items POST /cart_items.json\n"],["create","NotificationsController","NotificationsController.html#method-i-create","()",""],["create_admin_breadcrumbs","ApplicationHelper","ApplicationHelper.html#method-i-create_admin_breadcrumbs","()",""],["create_app_breadcrumbs","ApplicationHelper","ApplicationHelper.html#method-i-create_app_breadcrumbs","()",""],["current_cart","ApplicationController","ApplicationController.html#method-i-current_cart","()",""],["dashboard","Admin::AdminController","Admin/AdminController.html#method-i-dashboard","()",""],["decrement_cart_item_quantity","Cart","Cart.html#method-i-decrement_cart_item_quantity","(cart_item_id)","<p>Decreases the quantity and weight of a cart item, including any associated\naccessories\n<p>@return [object] …\n"],["del","Tag","Tag.html#method-c-del","(value, product_id)","<p>Deletes tags not contained within the comma separated string, associated by\nthe HABTM taggings table …\n"],["delayed_shipping","Order","Order.html#method-i-delayed_shipping","()","<p>If you set the shipping date for an order more than once, send a delayed\nshipping email\n<p>@return [array] …\n"],["destroy","Admin::AccessoriesController","Admin/AccessoriesController.html#method-i-destroy","()","<p>Destroying an accessory\n<p>Various if statements to handle how a Accessory is dealt with then checking\norder …\n"],["destroy","Admin::CategoriesController","Admin/CategoriesController.html#method-i-destroy","()","<p>DELETE /categories/1 DELETE /categories/1.json\n"],["destroy","Admin::Countries::TaxRatesController","Admin/Countries/TaxRatesController.html#method-i-destroy","()","<p>DELETE /tax_rates/1 DELETE /tax_rates/1.json\n"],["destroy","Admin::Countries::ZonesController","Admin/Countries/ZonesController.html#method-i-destroy","()","<p>DELETE /zones/1 DELETE /zones/1.json\n"],["destroy","Admin::CountriesController","Admin/CountriesController.html#method-i-destroy","()","<p>DELETE /countries/1 DELETE /countries/1.json\n"],["destroy","Admin::Products::AttachmentsController","Admin/Products/AttachmentsController.html#method-i-destroy","()","<p>DELETE /attachments/1 DELETE /attachments/1.json\n"],["destroy","Admin::Products::Skus::AttributeTypesController","Admin/Products/Skus/AttributeTypesController.html#method-i-destroy","()","<p>DELETE /attribute_types/1 DELETE /attribute_types/1.json\n"],["destroy","Admin::Products::SkusController","Admin/Products/SkusController.html#method-i-destroy","()","<p>Destroying a SKU\n<p>Various if statements to handle how a SKU is dealt with then checking order\nand cart …\n"],["destroy","Admin::Products::TagsController","Admin/Products/TagsController.html#method-i-destroy","()","<p>Destroy a tag record\n<p>@return [nil]\n"],["destroy","Admin::ProductsController","Admin/ProductsController.html#method-i-destroy","()","<p>Destroying a product\n<p>Various if statements to handle how a product is dealt with then checking\norder and …\n"],["destroy","Admin::Shippings::TiersController","Admin/Shippings/TiersController.html#method-i-destroy","()","<p>DELETE /tiers/1 DELETE /tiers/1.json\n"],["destroy","Admin::ShippingsController","Admin/ShippingsController.html#method-i-destroy","()","<p>Destroying a shipping\n<p>If no associated order records, destroy the shipping. Else set it to\ninactive.\n"],["destroy","CartItemsController","CartItemsController.html#method-i-destroy","()","<p>DELETE /cart_items/1 DELETE /cart_items/1.json\n"],["destroy","UsersController","UsersController.html#method-i-destroy","()",""],["dispatch_all","Mailatron4000::Orders","Mailatron4000/Orders.html#method-c-dispatch_all","()",""],["edit","Admin::AccessoriesController","Admin/AccessoriesController.html#method-i-edit","()","<p>GET /accessories/1/edit\n"],["edit","Admin::CategoriesController","Admin/CategoriesController.html#method-i-edit","()","<p>GET /categories/1/edit\n"],["edit","Admin::Countries::TaxRatesController","Admin/Countries/TaxRatesController.html#method-i-edit","()","<p>GET /tax_rates/1/edit\n"],["edit","Admin::Countries::ZonesController","Admin/Countries/ZonesController.html#method-i-edit","()","<p>GET /zones/1/edit\n"],["edit","Admin::CountriesController","Admin/CountriesController.html#method-i-edit","()","<p>GET /countries/1/edit\n"],["edit","Admin::Products::Skus::AttributeTypesController","Admin/Products/Skus/AttributeTypesController.html#method-i-edit","()","<p>GET /attribute_types/1/edit\n"],["edit","Admin::Products::SkusController","Admin/Products/SkusController.html#method-i-edit","()",""],["edit","Admin::ProductsController","Admin/ProductsController.html#method-i-edit","()",""],["edit","Admin::Shippings::TiersController","Admin/Shippings/TiersController.html#method-i-edit","()","<p>GET /tiers/1/edit\n"],["edit","Admin::ShippingsController","Admin/ShippingsController.html#method-i-edit","()","<p>GET /shippings/1/edit\n"],["edit","UsersController","UsersController.html#method-i-edit","()",""],["errors_for","ApplicationHelper","ApplicationHelper.html#method-i-errors_for","(model, attribute)",""],["express","Orders::BuildController","Orders/BuildController.html#method-i-express","()",""],["express_items","Payatron4000::Paypal","Payatron4000/Paypal.html#method-c-express_items","(cart)",""],["express_purchase_options","Payatron4000::Paypal","Payatron4000/Paypal.html#method-c-express_purchase_options","(order, session)",""],["express_setup_options","Payatron4000::Paypal","Payatron4000/Paypal.html#method-c-express_setup_options","(order, steps, cart, session, ip_address, return_url, cancel_url)",""],["extension_white_list","FileUploader","FileUploader.html#method-i-extension_white_list","()","<p>Add a white list of extensions which are allowed to be uploaded. For images\nyou might use something like …\n"],["extension_white_list","RedactorRailsDocumentUploader","RedactorRailsDocumentUploader.html#method-i-extension_white_list","()",""],["extension_white_list","RedactorRailsPictureUploader","RedactorRailsPictureUploader.html#method-i-extension_white_list","()","<p>Add a white list of extensions which are allowed to be uploaded. For images\nyou might use something like …\n"],["failed","Payatron4000::Paypal","Payatron4000/Paypal.html#method-c-failed","(response, order)","<p>Failed order\n"],["failure","Orders::BuildController","Orders/BuildController.html#method-i-failure","()",""],["format_currency","ApplicationHelper","ApplicationHelper.html#method-i-format_currency","(price)",""],["full_name","Address","Address.html#method-i-full_name","()","<p>Combines the first and last name of an address\n<p>@return [string]\n"],["gross_price","ProductHelper","ProductHelper.html#method-i-gross_price","(net_price)",""],["guest_permissions","Ability","Ability.html#method-i-guest_permissions","(user)",""],["inactivate!","Accessory","Accessory.html#method-i-inactivate-21","()","<p>Sets the related record&#39;s active field as false\n<p>@return [object]\n"],["inactivate!","Product","Product.html#method-i-inactivate-21","()","<p>Sets the related record&#39;s active field as false\n<p>@return [object]\n"],["inactivate!","Shipping","Shipping.html#method-i-inactivate-21","()","<p>Sets the related record&#39;s active field as false\n<p>@return [object]\n"],["inactivate!","Sku","Sku.html#method-i-inactivate-21","()","<p>Sets the related record&#39;s active field as false\n<p>@return [object]\n"],["index","Admin::AccessoriesController","Admin/AccessoriesController.html#method-i-index","()","<p>GET /accessories GET /accessories.json\n"],["index","Admin::CategoriesController","Admin/CategoriesController.html#method-i-index","()","<p>GET /categories GET /categories.json\n"],["index","Admin::Countries::TaxRatesController","Admin/Countries/TaxRatesController.html#method-i-index","()","<p>GET /tax_rates GET /tax_rates.json\n"],["index","Admin::Countries::ZonesController","Admin/Countries/ZonesController.html#method-i-index","()","<p>GET /zones GET /zones.json\n"],["index","Admin::CountriesController","Admin/CountriesController.html#method-i-index","()","<p>GET /countries GET /countries.json\n"],["index","Admin::OrdersController","Admin/OrdersController.html#method-i-index","()","<p>GET /orders GET /orders.json\n"],["index","Admin::Products::Skus::AttributeTypesController","Admin/Products/Skus/AttributeTypesController.html#method-i-index","()","<p>GET /attribute_types GET /attribute_types.json\n"],["index","Admin::Products::TagsController","Admin/Products/TagsController.html#method-i-index","()","<p>A JSON index of all the tags in the database for the tagsinput typeahead\nfunctionality\n<p>@return [JSON object] …\n"],["index","Admin::ProductsController","Admin/ProductsController.html#method-i-index","()","<p>GET /products GET /products.json\n"],["index","Admin::Shippings::TiersController","Admin/Shippings/TiersController.html#method-i-index","()","<p>GET /tiers GET /tiers.json\n"],["index","Admin::ShippingsController","Admin/ShippingsController.html#method-i-index","()","<p>GET /shippings GET /shippings.json\n"],["index","StoreController","StoreController.html#method-i-index","()",""],["javascript","ApplicationHelper","ApplicationHelper.html#method-i-javascript","(*files)",""],["link_to_add_fields","ApplicationHelper","ApplicationHelper.html#method-i-link_to_add_fields","(name, f, association, target, tooltip)","<p>The type parameter defines whether the helper is an ajax trigger, or just a\nsimple form rendering.\n"],["link_to_remove_fields","ApplicationHelper","ApplicationHelper.html#method-i-link_to_remove_fields","(name, f, obj)",""],["low_stock","Notifier","Notifier.html#method-i-low_stock","(products)","<p>STOCK\n"],["new","Ability","Ability.html#method-c-new","(user)",""],["new","Admin::AccessoriesController","Admin/AccessoriesController.html#method-i-new","()","<p>GET /accessories/new GET /accessories/new.json\n"],["new","Admin::CategoriesController","Admin/CategoriesController.html#method-i-new","()","<p>GET /categories/new GET /categories/new.json\n"],["new","Admin::Countries::TaxRatesController","Admin/Countries/TaxRatesController.html#method-i-new","()","<p>GET /tax_rates/new GET /tax_rates/new.json\n"],["new","Admin::Countries::ZonesController","Admin/Countries/ZonesController.html#method-i-new","()","<p>GET /zones/new GET /zones/new.json\n"],["new","Admin::CountriesController","Admin/CountriesController.html#method-i-new","()","<p>GET /countries/new GET /countries/new.json\n"],["new","Admin::Products::Skus::AttributeTypesController","Admin/Products/Skus/AttributeTypesController.html#method-i-new","()","<p>GET /attribute_types/new GET /attribute_types/new.json\n"],["new","Admin::Products::Skus::StockLevelsController","Admin/Products/Skus/StockLevelsController.html#method-i-new","()","<p>New stock level\n<p>Modal trigger for displaying a form to add a stock level adjustment\n"],["new","Admin::ProductsController","Admin/ProductsController.html#method-i-new","()","<p>GET /products/new GET /products/new.json\n"],["new","Admin::Shippings::TiersController","Admin/Shippings/TiersController.html#method-i-new","()","<p>GET /tiers/new GET /tiers/new.json\n"],["new","Admin::ShippingsController","Admin/ShippingsController.html#method-i-new","()","<p>GET /shippings/new GET /shippings/new.json\n"],["new","DeepStruct","DeepStruct.html#method-c-new","(hash=nil)",""],["new","OrdersController","OrdersController.html#method-i-new","()","<p>GET /orders/new GET /orders/new.json\n"],["new","UsersController","UsersController.html#method-i-new","()","<p>GET /users/new GET /users/new.json\n"],["notification_sent","Mailatron4000","Mailatron4000.html#method-c-notification_sent","(notification)","<p>Marks a notification as sent and records the time\n<p>@return [Mailatron4000::notification_sent] @parameter …\n"],["notify","Mailatron4000::Stock","Mailatron4000/Stock.html#method-c-notify","()",""],["order_received","Notifier","Notifier.html#method-i-order_received","(order)","<p>ORDERS\n"],["order_shipped","Notifier","Notifier.html#method-i-order_shipped","(order)","<p>SHIPPINGS\n"],["order_updated","Notifier","Notifier.html#method-i-order_updated","(order)",""],["payment_status","OrderHelper","OrderHelper.html#method-i-payment_status","(status)",""],["paypal_ipn","Admin::TransactionsController","Admin/TransactionsController.html#method-i-paypal_ipn","()","<p>Handler for incoming Instant Payment Notifications from paypal about orders\n"],["pending_order","Notifier","Notifier.html#method-i-pending_order","(order)",""],["positive?","Store","Store.html#method-c-positive-3F","(number)","<p>Detects whether an integer is positive\n<p>@return [boolean]\n"],["price_in_pennies","Payatron4000","Payatron4000.html#method-c-price_in_pennies","(price)","<p>Convert a price into single digit currency\n<p>@return [Payatron4000::price_in_pennies] @parameter [decimal] …\n"],["price_range","CategoryHelper","CategoryHelper.html#method-i-price_range","(product)",""],["purchase","Orders::BuildController","Orders/BuildController.html#method-i-purchase","()",""],["purge","Orders::BuildController","Orders/BuildController.html#method-i-purge","()",""],["render_breadcrumbs","ApplicationHelper","ApplicationHelper.html#method-i-render_breadcrumbs","(type)",""],["reset_settings","Store","Store.html#method-c-reset_settings","()","<p>Clears the store_settings class variable so they can be taken from the\ndatabase when next accessed\n<p>@return …\n"],["reset_tax","Country","Country.html#method-i-reset_tax","()","<p>Resets the tax rate Store library method after saving a country record as\nthe tax rate is stored as a …\n"],["reset_tax","TaxRate","TaxRate.html#method-i-reset_tax","()","<p>Resets the tax rate Store library method after saving a tax rate record as\nthe tax rate is stored as …\n"],["reset_tax_rate","Store","Store.html#method-c-reset_tax_rate","()","<p>Clears the current_country class variable so the new country can be taken\nfrom the database when next …\n"],["results","SearchController","SearchController.html#method-i-results","()",""],["role?","User","User.html#method-i-role-3F","(role)",""],["search_data","Product","Product.html#method-i-search_data","()","<p>Search paramters for elasticsearch\n<p>@return [nil]\n"],["settings","Admin::AdminController","Admin/AdminController.html#method-i-settings","()",""],["settings","Store","Store.html#method-c-settings","()","<p>Retrieves the store settings from the admin user\n<p>@return [Store::settings]\n"],["ship_order_today","Order","Order.html#method-i-ship_order_today","()","<p>When shipping date for an order is set, if it&#39;s today, mark the order\nas dispatched and send the …\n"],["shipping_date_nil?","Order","Order.html#method-i-shipping_date_nil-3F","()","<p>Determines whether the shipping date of the current order is nil\n<p>@return [boolean]\n"],["shipping_delayed","Notifier","Notifier.html#method-i-shipping_delayed","(order)",""],["shipping_status","OrderHelper","OrderHelper.html#method-i-shipping_status","(status)",""],["should_validate_sku?","Sku","Sku.html#method-i-should_validate_sku-3F","()","<p>Validate wether the current record is new\n<p>@return [boolean]\n"],["show","Admin::OrdersController","Admin/OrdersController.html#method-i-show","()","<p>GET /orders/1 GET /orders/1.json\n"],["show","CategoriesController","CategoriesController.html#method-i-show","()","<p>GET /categories/1 GET /categories/1.json\n"],["show","ErrorsController","ErrorsController.html#method-i-show","()",""],["show","Orders::BuildController","Orders/BuildController.html#method-i-show","()",""],["show","ProductsController","ProductsController.html#method-i-show","()","<p>GET /products/1 GET /products/1.json\n"],["single_product","Product","Product.html#method-i-single_product","()","<p>Detects if a product has more than one SKU when attempting to set the\nsingle product field as true\n<p>@return …\n"],["sku_attribute_values","ProductHelper","ProductHelper.html#method-i-sku_attribute_values","(sku, single)",""],["sku_stock_notification","Notifier","Notifier.html#method-i-sku_stock_notification","(sku, email)",""],["status_code","ErrorsController","ErrorsController.html#method-i-status_code","()",""],["stock_update","Payatron4000","Payatron4000.html#method-c-stock_update","(order)","<p>Updates the stock after a purchase has been completed\n<p>@return [Payatron4000::stock_update] @parameter …\n"],["store_dir","FileUploader","FileUploader.html#method-i-store_dir","()","<p>Override the directory where uploaded files will be stored. This is a\nsensible default for uploaders …\n"],["store_dir","RedactorRailsDocumentUploader","RedactorRailsDocumentUploader.html#method-i-store_dir","()",""],["store_dir","RedactorRailsPictureUploader","RedactorRailsPictureUploader.html#method-i-store_dir","()","<p>Override the directory where uploaded files will be stored. This is a\nsensible default for uploaders …\n"],["success","Orders::BuildController","Orders/BuildController.html#method-i-success","()",""],["successful","Payatron4000::Paypal","Payatron4000/Paypal.html#method-c-successful","(response, order)","<p>Successful order\n"],["table_commands","ApplicationHelper","ApplicationHelper.html#method-i-table_commands","(object, show, edit, delete, type)",""],["tax_rate","Store","Store.html#method-c-tax_rate","()","<p>Sets the tax_rate for the entire store\n<p>@return [Store::tax_rate]\n"],["to_h","DeepStruct","DeepStruct.html#method-i-to_h","()",""],["total_price","Cart","Cart.html#method-i-total_price","()","<p>Calculates the total price of a cart\n<p>@return [decimal]\n"],["total_price","CartItem","CartItem.html#method-i-total_price","()","<p>Calculates the total price of a cart item by multipling the item price by\nit&#39;s quantity\n<p>@return [decimal] …\n"],["total_price","OrderItem","OrderItem.html#method-i-total_price","()","<p>Calculates the total price of an order item by multipling the item price by\nit&#39;s quantity\n<p>@return …\n"],["update","AccessoriesController","AccessoriesController.html#method-i-update","()","<p>Update accessory\n<p>Modal trigger for displaying a form to update the accessory selection on\nthe product …\n"],["update","Admin::AccessoriesController","Admin/AccessoriesController.html#method-i-update","()","<p>Updating an accessory\n<p>If the accessory is not associated with orders, update the current record.\nElse …\n"],["update","Admin::AdminController","Admin/AdminController.html#method-i-update","()",""],["update","Admin::CategoriesController","Admin/CategoriesController.html#method-i-update","()","<p>PUT /categories/1 PUT /categories/1.json\n"],["update","Admin::Countries::TaxRatesController","Admin/Countries/TaxRatesController.html#method-i-update","()","<p>PUT /tax_rates/1 PUT /tax_rates/1.json\n"],["update","Admin::Countries::ZonesController","Admin/Countries/ZonesController.html#method-i-update","()","<p>PUT /zones/1 PUT /zones/1.json\n"],["update","Admin::CountriesController","Admin/CountriesController.html#method-i-update","()","<p>PUT /countries/1 PUT /countries/1.json\n"],["update","Admin::OrdersController","Admin/OrdersController.html#method-i-update","()","<p>PUT /orders/1 PUT /orders/1.json\n"],["update","Admin::Products::Skus::AttributeTypesController","Admin/Products/Skus/AttributeTypesController.html#method-i-update","()","<p>PUT /attribute_types/1 PUT /attribute_types/1.json\n"],["update","Admin::Products::SkusController","Admin/Products/SkusController.html#method-i-update","()","<p>Updating a SKU\n<p>If the SKU is not associated with orders, update the current record. Else\ncreate a new …\n"],["update","Admin::ProductsController","Admin/ProductsController.html#method-i-update","()",""],["update","Admin::Shippings::TiersController","Admin/Shippings/TiersController.html#method-i-update","()","<p>PUT /tiers/1 PUT /tiers/1.json\n"],["update","Admin::ShippingsController","Admin/ShippingsController.html#method-i-update","()","<p>Updating a shipping\n<p>If the accessory is not associated with orders, update the current record.\nElse create …\n"],["update","CartItemsController","CartItemsController.html#method-i-update","()",""],["update","Orders::BuildController","Orders/BuildController.html#method-i-update","()",""],["update","ShippingsController","ShippingsController.html#method-i-update","()","<p>Update shipping results\n<p>When selecting a shipping country in the order process, the shipping\nresults are …\n"],["update","SkusController","SkusController.html#method-i-update","()","<p>Update SKU\n<p>Modal trigger for displaying a form to update the SKU selection on the\nproduct page\n"],["update","UsersController","UsersController.html#method-i-update","()",""],["update_quantity","CartItem","CartItem.html#method-i-update_quantity","(quantity, accessory)","<p>Updates the quantity of a cart item, taking into account associated\naccessories\n<p>@return [object]\n"],["update_weight","CartItem","CartItem.html#method-i-update_weight","(quantity, weight, accessory)","<p>Updates the weight of a cart item, taking into account associated\naccessories\n<p>@return [object]\n"],["url_content","RedactorRails::Document","RedactorRails/Document.html#method-i-url_content","()",""],["url_content","RedactorRails::Picture","RedactorRails/Picture.html#method-i-url_content","()",""],["user_permissions","Ability","Ability.html#method-i-user_permissions","(user)",""],["validate_each","TierValidator","TierValidator.html#method-i-validate_each","(record, attribute, value)",""],["warning","Mailatron4000::Stock","Mailatron4000/Stock.html#method-c-warning","()",""],["README_FOR_APP","","doc/README_FOR_APP.html","","<p>Use this README file to introduce your application and point to useful\nplaces in the API for learning …\n"]]}}